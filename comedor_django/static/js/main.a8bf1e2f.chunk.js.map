{"version":3,"sources":["componentes/opciones.js","componentes/terminarSesion.js","componentes/cabecera.js","componentes/pie.js","componentes/sesionSi.js","componentes/turnos.js","componentes/sesionNo.js","componentes/login.js","componentes/miTurno.js","componentes/registrarUsuario.js","componentes/recuperarClave.js","componentes/recuperarClaveNo.js","componentes/nuevaClave.js","componentes/menu.js","reportWebVitals.js","index.js"],"names":["Opciones","React","createElement","className","Link","to","src","alt","style","opacity","data-widget","role","data-accordion","TerminarSesion","navigate","useNavigate","token","localStorage","getItem","decodedToken","jwt","decode","data-toggle","nombre","onClick","removeItem","data-slide","Cabecera","Pie","href","target","rel","SesionSi","useEffect","Turnos","_useState","useState","_useState2","_slicedToArray","turnos","setTurnos","_useState3","_useState4","mensajeRespuesta","setMensajeRespuesta","_useState5","_useState6","mostrarConfirmacion","setMostrarConfirmacion","_useState7","_useState8","turnoSeleccionado","setTurnoSeleccionado","_useState9","_useState10","cerrar","setCerrar","axios","get","then","response","data","catch","error","console","handleSeleccionar","turno","type","data-card-widget","title","map","key","id_turno","cant_turno","cant_turno_total","concat","toFixed","aria-valuenow","aria-valuemin","aria-valuemax","width","data-target","id","data-dismiss","aria-label","aria-hidden","post","id_usuario","usuario_id","ape_p","hora_ini","hora_fin","accion","mensaje","setItem","handleReservar","SesionNo","Login","username","setUsername","password","setPassword","setError","showModal","setShowModal","campoRequerido","setCampoRequerido","display","onSubmit","e","preventDefault","trim","usuario","clave","reservaValue","reserva","session","placeholder","value","onChange","defaults","xsrfHeaderName","xsrfCookieName","MiTurno","setReserva","setMensaje","liberarReservaSeleccionado","setLiberarReservaSeleccionado","_useState11","_useState12","liberarReserva","csrfToken","name","parts","document","cookie","split","length","pop","shift","getCookie","headers","X-CSRFToken","finally","Number","isInteger","handleLiberarReserva","RegistrarUsuario","setUsuario","setClave","repetirClave","setRepetirClave","setNombre","apellidoP","setApellidoP","apellidoM","setApellidoM","_useState13","_useState14","fechaNacimiento","setFechaNacimiento","_useState15","_useState16","correo","setCorreo","_useState17","_useState18","telefono","setTelefono","_useState19","_useState20","_useState21","_useState22","mensajeCampo","setMensajeCampo","requiredFields","_useState23","_useState24","_useState25","_useState26","modalMensaje","setModalMensaje","missingFields","filter","field","join","test","userData","repetir_clave","ape_m","fec_nac","setTimeout","class","data-target-input","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","RecuperarClave","contacto","setContacto","codigo","setCodigo","idUsuario","setIdUsuario","mostrarIngresarCodigo","setMostrarIngresarCodigo","handleSubmit","_ref","_asyncToGenerator","_callee","_context","Swal","fire","icon","log","t0","_x","apply","arguments","handleIngresarCodigo","_ref2","_callee2","_context2","RecuperarClaveNo","NuevaClave","nuevaClave","setNuevaClave","repetirNuevaClave","setRepetirNuevaClave","disabled","Menu","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","App","Routes","Route","path","element","root","getElementById","createRoot","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.a8bf1e2f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import Cabecera from './cabecera';\r\n// import Menu from './menu';\r\n\r\nconst Opciones = () => {\r\n  return (\r\n    <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n\r\n      <Link to=\"/menu/\" className=\"brand-link\">\r\n        <img src=\"http://18.234.135.140:8001/static/dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" className=\"brand-image img-circle elevation-3\" style={{ opacity: 0.8 }} />\r\n        <span className=\"brand-text font-weight-light\">ComedorApp</span>\r\n      </Link>\r\n    \r\n      <div className=\"sidebar\">\r\n        \r\n        <nav className=\"mt-2\">\r\n          <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n            \r\n            <li className=\"nav-header\">OPCIONES</li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/menu/\" className=\"nav-link\">\r\n                <i className=\"nav-icon far fa-calendar-alt\"></i>\r\n                <p>\r\n                  Inicio\r\n                  <span className=\"badge badge-info right\">2</span>\r\n                </p>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/turnos/\" className=\"nav-link\">\r\n                <i className=\"nav-icon far fa-image\"></i>\r\n                <p>\r\n                  Turnos\r\n                </p>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/mi-turno/\" className=\"nav-link\">\r\n                <i className=\"nav-icon fas fa-columns\"></i>\r\n                <p>\r\n                  Mi turno\r\n                </p>\r\n              </Link>\r\n            </li>\r\n            \r\n          </ul>\r\n        </nav>\r\n        \r\n      </div>\r\n    \r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Opciones;\r\n","// import React, { useState } from 'react';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'; // Importar Link\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst TerminarSesion = () => {\r\n  const navigate = useNavigate();\r\n  // const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n\r\n  const token = localStorage.getItem('token');\r\n  const decodedToken = jwt.decode(token);\r\n\r\n  // const handleCerrarSesion = () => {\r\n  //   setShowConfirmDialog(true);\r\n  // };\r\n\r\n  const handleCerrarSesion = () => {\r\n    localStorage.removeItem('session');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('reserva_usuario');\r\n    // localStorage.removeItem('usuario');\r\n    navigate('/login');\r\n  }\r\n\r\n  // const handleConfirmCerrarSesion = () => {\r\n  //   localStorage.removeItem('session');\r\n  //   localStorage.removeItem('token');\r\n  //   localStorage.removeItem('reserva_usuario');\r\n  //   navigate('/login');\r\n  // };\r\n\r\n  // const handleCancelCerrarSesion = () => {\r\n  //   setShowConfirmDialog(false);\r\n  // };\r\n\r\n  const handleConfiguraciones = () => {\r\n    navigate('/configuraciones');\r\n  };\r\n\r\n  return (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item dropdown user-menu\">\r\n        <Link to=\"#\" className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">\r\n          <img\r\n            src=\"http://18.234.135.140:8001/static/dist/img/user2-160x160.jpg\"\r\n            className=\"user-image img-circle elevation-2\"\r\n            alt=\"\"\r\n          />\r\n          {decodedToken && (<span className=\"d-none d-md-inline\">{decodedToken.nombre}</span>)}\r\n        </Link>\r\n        <ul className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n          <li className=\"user-header bg-primary\">\r\n            <img\r\n              src=\"http://18.234.135.140:8001/static/dist/img/user2-160x160.jpg\"\r\n              className=\"img-circle elevation-2\"\r\n              alt=\"\"\r\n            />\r\n            {decodedToken && (<p>{decodedToken.nombre}</p>)}\r\n            {/* <p>\r\n              {decodedToken.nombre} \r\n              - {decodedToken.rol}\r\n              <small>Miembro desde {decodedToken.fechaIngreso}</small>\r\n            </p> */}\r\n          </li>\r\n          <li className=\"user-footer\">\r\n            <Link to=\"#\" className=\"btn btn-default btn-flat\" onClick={handleConfiguraciones}>Perfil</Link>\r\n            <button className=\"btn btn-default btn-flat float-right\" onClick={handleCerrarSesion}>Cerrar sesión</button>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"#\" className=\"nav-link\" data-widget=\"fullscreen\">\r\n          <i className=\"fas fa-expand-arrows-alt\"></i>\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          to=\"#\"\r\n          className=\"nav-link\"\r\n          data-widget=\"control-sidebar\"\r\n          data-slide=\"true\"\r\n        >\r\n          <i className=\"fas fa-th-large\"></i>\r\n        </Link>\r\n      </li>\r\n      \r\n      {/* {showConfirmDialog && (\r\n        <div className=\"confirm-dialog\">\r\n          <p>¿Está seguro que desea cerrar la sesión?</p>\r\n          <button onClick={handleConfirmCerrarSesion}>Aceptar</button>\r\n          <button onClick={handleCancelCerrarSesion}>Cancelar</button>\r\n        </div>\r\n      )} */}\r\n\r\n\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TerminarSesion;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TerminarSesion from './terminarSesion';\r\n\r\nconst Cabecera = () => {\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"#\" className=\"nav-link\" data-widget=\"pushmenu\">\r\n            <i className=\"fas fa-bars\"></i>\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <Link to=\"/menu/\" className=\"nav-link\">\r\n            Inicio\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <Link to=\"#\" className=\"nav-link\">\r\n            Contacto\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item dropdown user-menu\">\r\n          <Link to=\"#\" className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">\r\n            <img\r\n              src=\"../../dist/img/user2-160x160.jpg\"\r\n              className=\"user-image img-circle elevation-2\"\r\n              alt=\"\"\r\n            />\r\n            <span className=\"d-none d-md-inline\">Alexander Pierce</span>\r\n          </Link>\r\n          <ul className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n            <li className=\"user-header bg-primary\">\r\n              <img\r\n                src=\"../../dist/img/user2-160x160.jpg\"\r\n                className=\"img-circle elevation-2\"\r\n                alt=\"\"\r\n              />\r\n              <p>\r\n                Alexander Pierce - Desarrollador Web\r\n                <small>Miembro desde Nov. 2012</small>\r\n              </p>\r\n            </li>\r\n            <li className=\"user-footer\">\r\n              <Link to=\"#\" className=\"btn btn-default btn-flat\">\r\n                Perfil\r\n              </Link>\r\n              <Link to=\"#\" className=\"btn btn-default btn-flat float-right\">\r\n                Cerrar sesión\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"#\" className=\"nav-link\" data-widget=\"fullscreen\">\r\n            <i className=\"fas fa-expand-arrows-alt\"></i>\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            to=\"#\"\r\n            className=\"nav-link\"\r\n            data-widget=\"control-sidebar\"\r\n            data-slide=\"true\"\r\n          >\r\n            <i className=\"fas fa-th-large\"></i>\r\n          </Link>\r\n        </li>\r\n      </ul> */}\r\n      <TerminarSesion />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Cabecera;\r\n","import React from 'react';\r\n\r\nconst Pie = () => {\r\n  return (\r\n    <footer className=\"main-footer\">\r\n      <div className=\"float-right d-none d-sm-block\">\r\n        <b>Version</b> 3.2.0\r\n      </div>\r\n      <strong>\r\n        Copyright &copy; 2014-2021{' '}\r\n        <a href=\"https://adminlte.io\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          AdminLTE.io\r\n        </a>\r\n        . All rights reserved.\r\n      </strong>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Pie;\r\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SesionSi = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    const session = localStorage.getItem('session');\r\n    if (session === '1') {\r\n      navigate('/turnos'); // Redirecciona a la página deseada (por ejemplo, '/turnos')\r\n    }\r\n  }, [navigate]);\r\n  \r\n  return null; // No renderiza nada, solo redirige en función de la sesión\r\n};\r\n\r\nexport default SesionSi;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'; // Importa Link\r\nimport jwt from 'jsonwebtoken';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n// import SesionNo from './sesionNo'; // Importa el componente\r\n// import TerminarSesion from './terminarSesion';\r\n// import { useParams } from 'react-router-dom'; // Importa el hook useParams\r\nimport Opciones from './opciones';\r\nimport Cabecera from './cabecera';\r\nimport Pie from './pie';\r\nimport SesionSi from './sesionSi';\r\n// import SesionNo from './sesionNo';\r\n// import Login from './componentes/login';\r\n\r\n\r\n\r\n// const decodedToken = jwt.decode(token);\r\n// console.log('token:', decodedToken);\r\n\r\n// console.log('reserva_usuario:', localStorage.getItem('reserva_usuario'));\r\n// console.log('session:', localStorage.getItem('session'));\r\n\r\nconst Turnos = () => {\r\n  const [turnos, setTurnos] = useState([]);\r\n  const [mensajeRespuesta, setMensajeRespuesta] = useState(null); // Estado para almacenar la respuesta del servidor\r\n  \r\n  const [mostrarConfirmacion, setMostrarConfirmacion] = useState(false);\r\n  const [turnoSeleccionado, setTurnoSeleccionado] = useState(null);\r\n  // const { token } = useParams();\r\n  const [cerrar, setCerrar] = useState('');\r\n  const navigate = useNavigate();\r\n  \r\n  const token = localStorage.getItem('token');// esto lo tengo que colocar aqui porque ponerlo hace que no cargue el componente ni decodifique la data de la variable \"token\"\r\n  const decodedToken = jwt.decode(token); // Decodificar el token aquí para acceder al nombre del usuario\r\n\r\n  useEffect(() => {\r\n    // Utiliza useParams() para obtener el token desde los parámetros de la ruta\r\n    \r\n\r\n    if (token) {\r\n      try {\r\n\r\n        // const decodedToken = jwt.decode(token);\r\n        \r\n        // Puedes utilizar los datos del usuario si es necesario\r\n        // console.log('Datos del usuario:', decodedToken);\r\n\r\n        // axios.get('api/turnos/')\r\n        // axios.get('http://127.0.0.1:8000/api/turnos/')\r\n        axios.get('http://18.234.135.140:8001/api/turnos/')  \r\n        .then(response => setTurnos(response.data))\r\n          .catch(error => console.error('Error fetching data:', error));\r\n      } catch (error) {\r\n        console.error('Error al decodificar el token:', error);\r\n      }\r\n    }\r\n  }, [token]);\r\n\r\n  const handleSeleccionar = (turno) => {\r\n    setMostrarConfirmacion(true);\r\n    setTurnoSeleccionado(turno);\r\n  };\r\n\r\n  const handleReservar = (turno) => {\r\n    // const token = props.location.state.token;\r\n\r\n    if (token) {\r\n      try {\r\n        // const decodedToken = jwt.decode(token);\r\n        // Puedes utilizar los datos del usuario si es necesario\r\n        \r\n        // console.log('Datos del usuario:', decodedToken);\r\n\r\n        // Enviar solicitud POST para procesar la selección del turno\r\n        // axios.post('procesar-solicitud/', {\r\n        // axios.post('http://127.0.0.1:8000/procesar-solicitud/', {\r\n        axios.post('http://18.234.135.140:8001/procesar-solicitud/', {\r\n          id_turno: turno.id_turno,\r\n          id_usuario: decodedToken.usuario_id,\r\n          nombre: decodedToken.nombre,\r\n          ape_p: decodedToken.ape_p,\r\n          hora_ini: turno.hora_ini,\r\n          hora_fin: turno.hora_fin,\r\n          accion: 1\r\n        })\r\n          .then(response => {\r\n            if(response.data.error){\r\n              setMensajeRespuesta(response.data.error);\r\n\r\n            }else{\r\n              setMensajeRespuesta(response.data.mensaje);\r\n              setCerrar(response.data.cerrar); \r\n              localStorage.setItem('reserva_usuario', '1');\r\n              // console.log('reserva_usuario:', localStorage.getItem('reserva_usuario'));\r\n              // ...\r\n            }\r\n          })\r\n          .catch(error => {\r\n            if (error.response && error.response.data && error.response.data.error) {\r\n              // Si el servidor envía un mensaje de error, lo capturamos y lo establecemos en el estado\r\n              // console.error('Error al decodificar el token:', error.response.data.error);\r\n              setMensajeRespuesta(error.response.data.error);\r\n            } else {\r\n              // En caso de otro error, mostramos un mensaje genérico\r\n              setMensajeRespuesta('Ha ocurrido un error al procesar la solicitud.');\r\n            }\r\n            // ...\r\n          });\r\n      } catch (error) {\r\n        console.error('Error al decodificar el token:', error);\r\n      }\r\n    }\r\n    setMostrarConfirmacion(false);\r\n  };\r\n  \r\n  const handleCerrarModal = () => {\r\n    if (cerrar){\r\n      navigate('/mi-turno/');\r\n    }\r\n  };\r\n\r\n  // const handleCancelar = () => {\r\n  //   setMostrarConfirmacion(false);\r\n  // };\r\n  // const handleReservarLibre = (turno) => {\r\n  //   // Lógica para reservar el turno\r\n  //   console.log('Turno reservado:', turno);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Cabecera/>\r\n      <Opciones/>\r\n      <SesionSi/>\r\n      {/* <SesionNo /> */}\r\n      <div className=\"content-wrapper\">\r\n      \r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Detalle de turnos</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\"><Link to=\"/menu/\">Inicio</Link></li>\r\n                  <li className=\"breadcrumb-item active\">Turnos</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"content\">\r\n\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">Turnos</h3>\r\n\r\n              <div className=\"card-tools\">\r\n                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\r\n                  <i className=\"fas fa-minus\"></i>\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <table className=\"table table-bordered table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  {/* <th>id_turno</th> */}\r\n                  <th>Turno</th>\r\n                  {/* <th>Inicio</th>\r\n                  <th>Fin</th> */}\r\n                  <th>Cantidad</th>\r\n                  <th>Estado</th>\r\n                  <th>Acción{/* Columna para los botones */}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {turnos.map(turno => (\r\n                  <tr key={turno.id_turno}>\r\n                    {/* <td>{turno.id_turno}</td> */}\r\n                    <td>{turno.turno}</td>\r\n                    {/* <td>{turno.hora_ini}</td>\r\n                    <td>{turno.hora_fin}</td> */}\r\n                    <td>{turno.cant_turno}/{turno.cant_turno_total}</td>\r\n\r\n                    <td className=\"project_progress\">\r\n                      <div className=\"progress progress-sm\">\r\n                        <div className={`progress-bar ${((turno.cant_turno / turno.cant_turno_total) * 100).toFixed(0) >= 100 ? 'bg-red' : 'bg-default'}`} role=\"progressbar\" aria-valuenow={((turno.cant_turno / turno.cant_turno_total) * 100).toFixed(0)} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{ width: `${((turno.cant_turno / turno.cant_turno_total) * 100).toFixed(0)}%` }}>\r\n                        </div>\r\n                      </div>\r\n                      <small>\r\n                        {((turno.cant_turno / turno.cant_turno_total) * 100).toFixed(0)}% Completado\r\n                      </small>\r\n                    </td>\r\n                    \r\n                    <td> \r\n                      \r\n                      \r\n                      {turno.id_turno === 11 ? (\r\n                          localStorage.getItem('reserva_usuario') === '0' ? (\r\n                            <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modal-default\" onClick={() => handleSeleccionar(turno)}>Libre</button> \r\n                          ) : (\r\n                            <div>No disp.</div>  \r\n                          )   \r\n                        ) : (\r\n                          turno.cant_turno === turno.cant_turno_total ? (\r\n                              //Los demás turnos están llenos\r\n                              <div>No disp.</div>\r\n                            ) : (\r\n                                localStorage.getItem('reserva_usuario') === '0' ? (\r\n                                  <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modal-default\" onClick={() => handleSeleccionar(turno)}>Libre</button>\r\n                                ):(\r\n                                  <div>No disp.</div>  \r\n                                )\r\n                            )  \r\n                        )}\r\n                        \r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n              {/* {mensajeRespuesta && (\r\n                <div>\r\n                  <p>{mensajeRespuesta}</p>\r\n                </div>\r\n              )}\r\n              {mostrarConfirmacion && turnoSeleccionado && (\r\n                <div>\r\n                  <p>¿Está seguro que quiere reservar el turno {turnoSeleccionado.turno}?</p>\r\n                  <button onClick={() => handleReservar(turnoSeleccionado)}>Aceptar</button>\r\n                  <button onClick={handleCancelar}>Cancelar</button>\r\n                </div>\r\n              )} */}\r\n                \r\n              <div className=\"modal fade\" id=\"modal-default\">\r\n                <div className=\"modal-dialog\">\r\n                  <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                      <h4 className=\"modal-title\">Confirmación de Reserva</h4>\r\n                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                      {mensajeRespuesta && (\r\n                        <div>\r\n                          <p>{mensajeRespuesta}</p>\r\n                        </div>\r\n                      )}\r\n                      {mostrarConfirmacion && turnoSeleccionado && (\r\n                        <div>\r\n                          <p>\r\n                            ¿Está seguro que quiere reservar el turno: {turnoSeleccionado.id_turno === 11 ? turnoSeleccionado.turno : turnoSeleccionado.id_turno}?\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"modal-footer justify-content-between\">\r\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={handleCerrarModal}>\r\n                        {mostrarConfirmacion ? 'Cancelar' : 'Cerrar'}\r\n                      </button>\r\n                      {mostrarConfirmacion && (\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => {\r\n                            handleReservar(turnoSeleccionado);\r\n                            setMensajeRespuesta('¡Turno reservado exitosamente!');\r\n                            setMostrarConfirmacion(false); // Cerrar el modal después de la confirmación\r\n                          }}\r\n                         \r\n                        >\r\n                          Aceptar\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"card-footer\">\r\n              Footer\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Pie/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Turnos;\r\n\r\n    \r\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SesionNo = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    const session = localStorage.getItem('session');\r\n    if (session !== '1') {\r\n      navigate('/login'); // Redirecciona a la página deseada (por ejemplo, '/turnos')\r\n    }\r\n  }, [navigate]);\r\n  \r\n  return null; // No renderiza nada, solo redirige en función de la sesión\r\n};\r\n\r\nexport default SesionNo;","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\n// import SesionSi from './sesionSi'; // Importa el componente\r\nimport SesionNo from \"./sesionNo\"; // Importa el componente\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false); // Estado para mostrar el modal de error\r\n  const [campoRequerido, setCampoRequerido] = useState(false);\r\n\r\n  // const handleLogin = () => {\r\n  const handleLogin = (e) => {\r\n    e.preventDefault(); // Evitar el comportamiento predeterminado del formulario\r\n    setError(\"\");\r\n    setShowModal(false); // Ocultar el modal antes de hacer la solicitud\r\n\r\n    if (!username.trim() || !password.trim()) {\r\n      // setShowModal(true); // Mostrar el modal si al menos uno de los campos está vacío\r\n      setCampoRequerido(true);\r\n      return;\r\n    }\r\n    // axios.post('api/login/', {\r\n    // axios.post('http://127.0.0.1:8000/api/login/', {\r\n    axios.post(\"http://18.234.135.140:8001//api/login/\", {\r\n        usuario: username,\r\n        clave: password,\r\n      })\r\n\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          setError(response.data.error);\r\n          setShowModal(true); // Mostrar el modal solo en caso de error\r\n        } else {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          const token = jwt.decode(response.data.token);\r\n          const reservaValue = token.reserva ? \"1\" : \"0\";\r\n          const session = token.session ? \"1\" : \"0\";\r\n          localStorage.setItem(\"reserva_usuario\", reservaValue);\r\n          localStorage.setItem(\"session\", session);\r\n          navigate(\"/turnos/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(\"Hubo un error en el servidor\");\r\n        setShowModal(true); // Mostrar el modal solo en caso de error\r\n        console.error(\"Error de inicio de sesión:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"hold-transition login-page\">\r\n      {/* <SesionSi /> */}\r\n      <SesionNo />\r\n\r\n      <div\r\n        className={`modal fade ${showModal ? \"show\" : \"\"}`}\r\n        id=\"modal-sm\"\r\n        style={{ display: showModal ? \"block\" : \"none\" }}\r\n      >\r\n        <div className=\"modal-dialog modal-sm\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Error</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                onClick={() => setShowModal(false)}\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <p>{error}</p>\r\n            </div>\r\n\r\n            <div className=\"modal-footer justify-content-between\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-default\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setShowModal(false)}\r\n              >\r\n                Cerrar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"login-box\">\r\n        <div className=\"card card-outline card-primary\">\r\n          <div className=\"card-header text-center\">\r\n            <a href=\"/login\" className=\"h1\">\r\n              <b>Comedor</b>App\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            <p className=\"login-box-msg\">Iniciar sesión</p>\r\n            <form onSubmit={handleLogin}>\r\n              <div\r\n                className={`input-group mb-3 ${campoRequerido &&\r\n                  !username &&\r\n                  \"has-error\"}`}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control ${\r\n                    campoRequerido && !username ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                  placeholder=\"Usuario\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <span className=\"fas fa-user\"></span>\r\n                  </div>\r\n                </div>\r\n                {/* {campoRequerido && !username && <span className=\"error-message\">* Campo requerido.</span>} */}\r\n              </div>\r\n\r\n              <div\r\n                className={`input-group mb-3 ${campoRequerido &&\r\n                  !password &&\r\n                  \"has-error\"}`}\r\n              >\r\n                <input\r\n                  type=\"password\"\r\n                  className={`form-control ${\r\n                    campoRequerido && !password ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                  placeholder=\"Clave\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <span className=\"fas fa-lock\"></span>\r\n                  </div>\r\n                </div>\r\n                {/* {campoRequerido && !password && <span className=\"error-message\">* Campo requerido.</span>} */}\r\n              </div>\r\n\r\n              <div className=\"input-group mb-3\">\r\n                {/* <button onClick={handleLogin} class=\"btn btn-primary btn-block\" data-toggle=\"modal\" data-target=\"#modal-sm\">Ingresar</button> */}\r\n                {/* <button onClick={handleLogin} className=\"btn btn-primary btn-block\">Ingresar</button> */}\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                  Ingresar\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <p className=\"mb-1\">\r\n              <a href=\"/recuperar-clave/\">Olvide mi clave</a>\r\n            </p>\r\n            <p className=\"mb-0\">\r\n              <a href=\"/registrar-usuario/\" className=\"text-center\">\r\n                Registrar usuario\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport SesionNo from './sesionNo';\r\n\r\n// import TerminarSesion from './terminarSesion';\r\nimport Opciones from './opciones';\r\nimport Cabecera from './cabecera';\r\nimport Pie from './pie';\r\n// Configurar token CSRF para Axios\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\n\r\nconst getCookie = (name) => {\r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  if (parts.length === 2) return parts.pop().split(';').shift();\r\n};\r\n\r\nconst MiTurno = () => {\r\n  const [reserva, setReserva] = useState(null);\r\n  const [mensaje, setMensaje] = useState('');\r\n  const [mostrarConfirmacion, setMostrarConfirmacion] = useState(false);\r\n\r\n  const [mensajeRespuesta, setMensajeRespuesta] = useState(null); // Estado para almacenar la respuesta del servidor\r\n  const [liberarReservaSeleccionado, setLiberarReservaSeleccionado] = useState(null);\r\n  const token = localStorage.getItem('token');\r\n  const decodedToken = jwt.decode(token);\r\n  \r\n  const [cerrar, setCerrar] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Obtener el token desde localStorage\r\n    // const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        // const decodedToken = jwt.decode(token);\r\n        const id_usuario = decodedToken.usuario_id;\r\n\r\n        axios\r\n          // .get(`api/mostrar-solicitud/${id_usuario}/`)\r\n          // .get(`http://127.0.0.1:8000/api/mostrar-solicitud/${id_usuario}/`)\r\n          .get(`http://18.234.135.140:8001/api/mostrar-solicitud/${id_usuario}/`)\r\n          .then(response => {\r\n            setReserva(response.data);\r\n            // console.log('response:',response.data)\r\n            if (response.data.error) {\r\n              setMensajeRespuesta(response.data.error);\r\n            } else {\r\n              setMensajeRespuesta(response.data.mensaje);\r\n              // ...\r\n            }\r\n          })\r\n          .catch(error => console.error('Error fetching data:', error));\r\n      } catch (error) {\r\n        console.error('Error al decodificar el token:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleLiberarReserva = (reserva) => {\r\n    // console.log('reserva:',reserva)\r\n    if (reserva) {\r\n      const id_turno = Number(reserva.id_turno);\r\n      if (!Number.isInteger(id_turno)) {\r\n        setMensaje('El id_turno debe ser un número.');\r\n        return;\r\n      }\r\n  \r\n      // Mostrar el mensaje de confirmación\r\n      setMensaje(`¿Estás seguro de liberar la reserva del turno ${reserva.id_turno}?`);\r\n      setMostrarConfirmacion(true);\r\n      setLiberarReservaSeleccionado(reserva); // Cambia esto para pasar el id_turno\r\n    }\r\n  };\r\n\r\n  // const cancelarLiberarReserva = () => {\r\n  //   // Ocultar el mensaje de confirmación y limpiar el mensaje\r\n  //   setMostrarConfirmacion(false);\r\n  //   setMensaje('');\r\n  // };\r\n\r\n  const liberarReserva = (liberarReservaSeleccionado) => {\r\n    // console.log(\"liberarReservaSeleccionado:\", liberarReservaSeleccionado); // Agrega esta línea\r\n    if (token && liberarReservaSeleccionado) {\r\n      try {\r\n        const id_usuario = decodedToken.usuario_id;\r\n        const id_turno = liberarReservaSeleccionado.id_turno; // Utiliza directamente el valor del id_turno\r\n  \r\n        // Obtener el token CSRF desde las cookies\r\n        const csrfToken = getCookie('csrftoken'); // Implementa esta función para obtener la cookie CSRF\r\n  \r\n        axios\r\n          .post(\r\n            // 'api/liberar-reserva/',\r\n            // 'http://127.0.0.1:8000/api/liberar-reserva/',\r\n            'http://18.234.135.140:8001/api/liberar-reserva/',\r\n            { id_usuario, id_turno },\r\n            {\r\n              headers: {\r\n                'X-CSRFToken': csrfToken, // Agregar el token CSRF en el encabezado\r\n              },\r\n            }\r\n          )\r\n          .then(response => {\r\n            if (response.data.error) {\r\n              setMensajeRespuesta(response.data.error);\r\n              \r\n            } else {\r\n              setMensajeRespuesta(response.data.mensaje);\r\n              setCerrar(response.data.cerrar);  \r\n              localStorage.setItem('reserva_usuario', '0');\r\n              // ...\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error al liberar la reserva:', error);\r\n          })\r\n          .finally(() => {\r\n            // Ocultar el mensaje de confirmación después de liberar la reserva\r\n            setMostrarConfirmacion(false);\r\n          });\r\n      } catch (error) {\r\n        console.error('Error al decodificar el token:', error);\r\n      }\r\n    }\r\n  };\r\n  const handleCerrarModal = () => {\r\n    if (cerrar){\r\n      navigate('/menu/');\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Cabecera/>\r\n      <Opciones/>\r\n      <div className=\"content-wrapper\">\r\n      \r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Detalle de la Reserva</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\"><Link to=\"/menu/\">Inicio</Link></li>\r\n                  <li className=\"breadcrumb-item active\">Reserva</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"content\">\r\n\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">Mi turno</h3>\r\n\r\n              <div className=\"card-tools\">\r\n                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\r\n                  <i className=\"fas fa-minus\"></i>\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n              <div className=\"card-body\">\r\n\r\n                    <SesionNo />   \r\n                    {reserva ? (\r\n                      <div>\r\n                        <p>ID de Turno: {reserva.id_turno}</p>\r\n                        <p>ID de Usuario: {reserva.id_usuario}</p>\r\n                        <p>Nombre: {reserva.nombre}</p>\r\n                        <p>Apellido Paterno: {reserva.ape_p}</p>\r\n                        <p>Hora de Inicio: {reserva.hora_ini}</p>\r\n                        <p>Hora de Fin: {reserva.hora_fin}</p>\r\n                        <p>Acción: {reserva.accion}</p>\r\n                        {/* <button onClick={() => handleLiberarReserva(reserva)}>Liberar Reserva</button> */}\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modal-default\" onClick={() => handleLiberarReserva(reserva)}>liberar reserva</button>\r\n                      </div>\r\n                    ) : (\r\n                      <p>No se encontraron datos de reserva.</p>\r\n                    )}\r\n                    {/* {mensajeRespuesta && (\r\n                      <div>\r\n                        <p>{mensajeRespuesta}</p>\r\n                      </div>\r\n                    )} */}\r\n\r\n                    {/* {mostrarConfirmacion && (\r\n                      <div>\r\n                        <p>{mensaje}</p>\r\n                        <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" title=\"\" data-toggle=\"tooltip\" data-original-title=\"btn btn-outline-primary\" onClick={() => liberarReserva(liberarReservaSeleccionado)}>Aceptar</button>\r\n                        <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" title=\"\" data-toggle=\"tooltip\" data-original-title=\"btn btn-outline-primary\" onClick={cancelarLiberarReserva}>Cancelar</button>\r\n                      </div>\r\n                    )} */}\r\n\r\n                  {/* <button type=\"button\" className=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#modal-default\">\r\n                    Launch Default Modal\r\n                  </button> */}\r\n\r\n                  <div className=\"modal fade\" id=\"modal-default\">\r\n                    <div className=\"modal-dialog\">\r\n                      <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                          <h4 className=\"modal-title\">Confirmación</h4>\r\n                          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                          {mostrarConfirmacion ? (\r\n                            <div>\r\n                              <p>{mensaje}</p>\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              {mensajeRespuesta && (\r\n                                <div>\r\n                                  <p>{mensajeRespuesta}</p>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"modal-footer justify-content-between\">\r\n                          <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={handleCerrarModal}>\r\n                            {mostrarConfirmacion ? 'Cancelar' : 'Cerrar'}\r\n                          </button>\r\n                          {mostrarConfirmacion && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => {\r\n                                liberarReserva(liberarReservaSeleccionado);\r\n                              }}\r\n                            >\r\n                              Aceptar\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>   \r\n              </div>\r\n            \r\n            <div className=\"card-footer\">\r\n              Footer\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Pie/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiTurno;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst RegistrarUsuario = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [usuario, setUsuario] = useState('');\r\n    const [clave, setClave] = useState('');\r\n    const [repetirClave, setRepetirClave] = useState('');\r\n    const [nombre, setNombre] = useState('');\r\n    const [apellidoP, setApellidoP] = useState('');\r\n    const [apellidoM, setApellidoM] = useState('');\r\n    const [fechaNacimiento, setFechaNacimiento] = useState('');\r\n    const [correo, setCorreo] = useState('');\r\n    const [telefono, setTelefono] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n    const [mensajeCampo, setMensajeCampo] = useState('');\r\n\r\n    const requiredFields = ['usuario', 'clave', 'repetirClave', 'nombre', 'apellidoP', 'apellidoM', 'fechaNacimiento', 'correo', 'telefono'];\r\n\r\n    const [showModal, setShowModal] = useState(false); // Estado para mostrar el modal de error\r\n    const [modalMensaje, setModalMensaje] = useState('');\r\n\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setShowModal(false); // Ocultar el modal antes de hacer la solicitud\r\n        setModalMensaje('');\r\n        const phoneNumberPattern = /^[0-9]+$/; // Expresión regular para validar dígitos\r\n\r\n        const data = {\r\n            usuario,\r\n            clave,\r\n            repetirClave,\r\n            nombre,\r\n            apellidoP,\r\n            apellidoM,\r\n            fechaNacimiento,\r\n            correo,\r\n            telefono,\r\n        };\r\n        // console.log(data);\r\n        const missingFields = requiredFields.filter(field => !data[field]);\r\n\r\n        if (missingFields.length) {\r\n            setMensajeCampo('Falta llenar los campos: ' + missingFields.join(', '));\r\n            return;\r\n        }\r\n\r\n        if (clave !== repetirClave) {\r\n            // setMensaje('Las claves no coinciden. Por favor, verifique.');\r\n            setModalMensaje('Las claves no coinciden. Por favor, verifique.');\r\n            setShowModal(true);\r\n            return;\r\n        }\r\n\r\n        if (!phoneNumberPattern.test(telefono)) {\r\n            setModalMensaje('Error al ingresar el nro de telefono.');\r\n            setShowModal(true);\r\n            return;\r\n        }\r\n\r\n        const userData = {\r\n            usuario: usuario,\r\n            clave: clave,\r\n            repetir_clave: repetirClave,\r\n            nombre: nombre,\r\n            ape_p: apellidoP,\r\n            ape_m: apellidoM,\r\n            fec_nac: fechaNacimiento,\r\n            correo: correo,\r\n            telefono: telefono,\r\n        };\r\n\r\n        // axios.post('api/registrar-usuario/', userData)\r\n        // axios.post('http://127.0.0.1:8000/api/registrar-usuario/', userData)\r\n        axios.post('http://18.234.135.140:8001/api/registrar-usuario/', userData)\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    // setMensaje(response.data.error);\r\n                    setModalMensaje(response.data.error);\r\n                    setShowModal(true);\r\n                } else {\r\n                    setMensaje(response.data.mensaje);\r\n                    setTimeout(() => {\r\n                        navigate('/login');\r\n                    }, 1000);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // setMensaje('Error al registrar el usuario');\r\n                setModalMensaje('Error al registrar el usuario');\r\n                console.error('Error al registrar el usuario:', error);\r\n                setShowModal(true);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"hold-transition register-page2\">\r\n            <div className=\"register-box\">\r\n\r\n            <div className={`modal fade ${showModal ? 'show' : ''}`} id=\"modal-sm\" style={{ display: showModal ? 'block' : 'none' }}>\r\n                <div className=\"modal-dialog modal-sm\">\r\n\r\n                <div className=\"modal-content\">\r\n\r\n                    <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">Error</h4>\r\n                    <button type=\"button\" className=\"close\" onClick={() => setShowModal(false)}>\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                    </div>\r\n                    \r\n                    <div className=\"modal-body\">\r\n                    {/* <p>{mensaje}</p> */}\r\n                    <p>{modalMensaje}</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"modal-footer justify-content-between\">\r\n                    <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={() => setShowModal(false)}>Cerrar</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n                <div className=\"card card-outline card-success\">\r\n                    <div className=\"card-header text-center\">\r\n                        <a href=\"/login/\" className=\"h1\">\r\n                            <b>Comedor</b>App\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"login-box-msg\">Registrar nuevo usuario</p>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"text\" className={`form-control ${mensajeCampo && !usuario ? 'is-invalid' : ''}`} placeholder=\"Usuario\" value={usuario} onChange={(e) => setUsuario(e.target.value)} />\r\n                                <div class=\"input-group-append\">\r\n                                    <div class=\"input-group-text\">\r\n                                    <span class=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                </div>    \r\n                                {/* {mensajeCampo && !usuario && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"password\" className={`form-control ${mensajeCampo && !clave ? 'is-invalid' : ''}`} placeholder=\"Clave\" value={clave} onChange={(e) => setClave(e.target.value)} />\r\n                                <div class=\"input-group-append\">\r\n                                    <div class=\"input-group-text\">\r\n                                    <span class=\"fas fa-lock\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                {/* {mensajeCampo && !clave && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"password\" className={`form-control ${mensajeCampo && !repetirClave ? 'is-invalid' : ''}`} placeholder=\"Repetir Clave\" value={repetirClave} onChange={(e) => setRepetirClave(e.target.value)} />\r\n                                <div class=\"input-group-append\">\r\n                                    <div class=\"input-group-text\">\r\n                                    <span class=\"fas fa-lock\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                {/* {mensajeCampo && !repetirClave && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"text\" className={`form-control ${mensajeCampo && !nombre ? 'is-invalid' : ''}`} placeholder=\"Nombre\" value={nombre} onChange={(e) => setNombre(e.target.value)} />\r\n                                <div class=\"input-group-append\">\r\n                                    <div class=\"input-group-text\">\r\n                                    <span class=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                {/* {mensajeCampo && !nombre && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"text\" className={`form-control ${mensajeCampo && !apellidoP ? 'is-invalid' : ''}`} placeholder=\"Apellido Paterno\" value={apellidoP} onChange={(e) => setApellidoP(e.target.value)} />\r\n                                <div class=\"input-group-append\">\r\n                                    <div class=\"input-group-text\">\r\n                                    <span class=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                {/* {mensajeCampo && !apellidoP && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"text\" className={`form-control ${mensajeCampo && !apellidoM ? 'is-invalid' : ''}`} placeholder=\"Apellido Materno\" value={apellidoM} onChange={(e) => setApellidoM(e.target.value)} />\r\n                                <div class=\"input-group-append\">\r\n                                    <div class=\"input-group-text\">\r\n                                    <span class=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                {/* {mensajeCampo && !apellidoM && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <label>Fecha de nacimiento:</label>\r\n                            <div className=\"input-group mb-3\" id=\"reservationdate\" data-target-input=\"nearest\">\r\n                                <input type=\"date\" className={`form-control ${mensajeCampo && !fechaNacimiento ? 'is-invalid' : ''}`} placeholder=\"Fecha de Nacimiento (AAAA-MM-DD)\" value={fechaNacimiento} onChange={(e) => setFechaNacimiento(e.target.value)} />\r\n                                {/* {mensajeCampo && !fechaNacimiento && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className={`form-control ${mensajeCampo && !correo ? 'is-invalid' : ''}`} placeholder=\"Correo\" value={correo} onChange={(e) => setCorreo(e.target.value)} />\r\n                                <div class=\"input-group-append\">\r\n                                    <div class=\"input-group-text\">\r\n                                    <span class=\"fas fa-envelope\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                {/* {mensajeCampo && !correo && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\"><i class=\"fas fa-phone\"></i></span>\r\n                                </div>\r\n                                <input type=\"tel\" className={`form-control ${mensajeCampo && !telefono ? 'is-invalid' : ''}`} placeholder=\"Telefono\" value={telefono} onChange={(e) => setTelefono(e.target.value)} />\r\n                                {/* {mensajeCampo && !telefono && <span className=\"error-message\">* Campo requerido</span>} */}\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Registrar</button>\r\n                            </div>\r\n                            <a href=\"/login/\" className=\"text-center\">Ya tengo una cuenta</a>\r\n                        </form>\r\n                        {mensaje && <p>{mensaje}</p>}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>    \r\n    );\r\n};\r\n\r\nexport default RegistrarUsuario;\r\n\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst RecuperarClave = () => {\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  const [contacto, setContacto] = useState(\"telefono\"); // Valor por defecto es \"telefono\"\r\n  const [telefono, setTelefono] = useState(\"\");\r\n  const [correo, setCorreo] = useState(\"\");\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const [codigo, setCodigo] = useState(\"\");\r\n  const [idUsuario, setIdUsuario] = useState(\"\");\r\n  const [mostrarIngresarCodigo, setMostrarIngresarCodigo] = useState(false); // Estado para mostrar el botón\r\n  const navigate = useNavigate();\r\n  const [campoRequerido, setCampoRequerido] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    // console.log('usuario:',localStorage.getItem('usuario'));\r\n    e.preventDefault();\r\n\r\n    // if (!usuario.trim() || !correo.trim() || !telefono.trim()) {\r\n    //     // setShowModal(true); // Mostrar el modal si al menos uno de los campos está vacío\r\n    //     setCampoRequerido(true);\r\n    //     return;\r\n    // }\r\n\r\n    // Validar si el campo de usuario está vacío y se ha elegido \"correo\" o \"teléfono\"\r\n    if (\r\n      !usuario.trim() ||\r\n      (!telefono.trim() && contacto === \"telefono\") ||\r\n      (!correo.trim() && contacto === \"correo\")\r\n    ) {\r\n      setCampoRequerido(true);\r\n      return;\r\n    }\r\n\r\n    // console.log('data:',usuario,contacto,telefono,correo);\r\n\r\n    try {\r\n      // const response = await axios.post('api/recuperar-clave/', {\r\n      // const response = await axios.post('http://127.0.0.1:8000/api/recuperar-clave/', {\r\n      const response = await axios.post(\"http://18.234.135.140:8001/api/recuperar-clave/\",{\r\n          usuario,\r\n          contacto, // Envía la opción seleccionada (telefono o correo)\r\n          telefono,\r\n          correo,\r\n        }\r\n      );\r\n\r\n      if (response.data.error) {\r\n        // setMensaje(response.data.error);\r\n        setMostrarIngresarCodigo(false); // Ocultar el botón en caso de error\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          title: response.data.error,\r\n        });\r\n      } else {\r\n        setMensaje(response.data.mensaje);\r\n        console.log(response.data);\r\n        if (response.data.id_usuario) {\r\n          setIdUsuario(response.data.id_usuario);\r\n          // console.log('id_usuario:',response.data.id_usuario);\r\n          setMostrarIngresarCodigo(true); // Mostrar el botón en caso de éxito\r\n        }\r\n        // Swal.fire({\r\n        //     icon: 'warning',\r\n        //     title: response.data.mensaje,\r\n        // });\r\n      }\r\n    } catch (error) {\r\n      setMensaje(\"Error al procesar la solicitud\");\r\n      console.error(\"Error al procesar la solicitud:\", error);\r\n    }\r\n  };\r\n  // console.log('mensaje:', mensaje);\r\n  // const handleButtonClick = () => {\r\n  //     Swal.fire({\r\n  //       icon: 'warning',\r\n  //       title: mensaje\r\n  //     });\r\n  //   };\r\n\r\n  const handleIngresarCodigo = async () => {\r\n    try {\r\n      // Envía el código y el id_usuario al servidor para validar\r\n      // const response = await axios.post('api/validar-codigo/', {\r\n      // const response = await axios.post('http://127.0.0.1:8000/api/validar-codigo/', {\r\n      const response = await axios.post(\"http://18.234.135.140:8001/api/validar-codigo/\",{\r\n          id_usuario: idUsuario, // Cambia esto por el valor correcto\r\n          codigo: codigo, // Cambia esto por el código ingresado por el usuario\r\n        }\r\n      );\r\n\r\n      if (response.data.error) {\r\n        setMensaje(response.data.error);\r\n      } else {\r\n        setMensaje(response.data.mensaje);\r\n        localStorage.setItem(\"usuario\", response.data.usuario);\r\n        setTimeout(() => {\r\n          navigate(\"/nueva-clave/\");\r\n        }, 1000);\r\n      }\r\n    } catch (error) {\r\n      setMensaje(\"Error al validar el código\");\r\n      console.error(\"Error al validar el código:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"hold-transition register-page\">\r\n      <div className=\"register-box\">\r\n        <div className=\"card card-outline card-warning\">\r\n          <div className=\"card-header text-center\">\r\n            <a href=\"/login/\" className=\"h1\">\r\n              <b>Comedor</b>App\r\n            </a>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <p className=\"login-box-msg\">Recuperar contraseña</p>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control ${\r\n                    campoRequerido && !usuario ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                  placeholder=\"Usuario\"\r\n                  value={usuario}\r\n                  onChange={(e) => setUsuario(e.target.value)}\r\n                />\r\n\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <span className=\"fas fa-user\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default dropdown-toggle\"\r\n                    data-toggle=\"dropdown\"\r\n                  >\r\n                    Accion\r\n                  </button>\r\n                  <div className=\"dropdown-menu\">\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      type=\"button\"\r\n                      onClick={() => setContacto(\"telefono\")}\r\n                    >\r\n                      Telefono\r\n                    </button>\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      type=\"button\"\r\n                      onClick={() => setContacto(\"correo\")}\r\n                    >\r\n                      Correo\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {contacto === \"telefono\" ? (\r\n                  <input\r\n                    type=\"tel\"\r\n                    className={`form-control ${\r\n                      campoRequerido && !telefono ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    placeholder=\"Teléfono\"\r\n                    value={telefono}\r\n                    onChange={(e) => setTelefono(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type=\"email\"\r\n                    className={`form-control ${\r\n                      campoRequerido && !correo ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    placeholder=\"Correo\"\r\n                    value={correo}\r\n                    onChange={(e) => setCorreo(e.target.value)}\r\n                  />\r\n                )}\r\n                {contacto === \"telefono\" ? (\r\n                  <div className=\"input-group-prepend\">\r\n                    {/* <span class=\"input-group-text\"><i class=\"fas fa-phone\"></i></span> */}\r\n                    <div className=\"input-group-text\">\r\n                      <span className=\"fas fa-phone\"></span>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">\r\n                      <span className=\"fas fa-envelope\"></span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {/* <div class=\"input-group-append\">\r\n                                    <div class=\"input-group-text\">\r\n                                    <span class=\"fas fa-envelope\"></span>\r\n                                    </div>\r\n                                </div>  */}\r\n              </div>\r\n\r\n              {/* <div className=\"input-group\">\r\n                                <div>elija forma de recuperación</div>\r\n                                <select class=\"btn btn-default dropdown-toggle\" value={contacto} onChange={(e) => setContacto(e.target.value)}>\r\n                                    \r\n                                        <option value=\"telefono\">Teléfono</option>\r\n                                        <option value=\"correo\">Correo</option>\r\n                                    \r\n                                </select>\r\n                            </div>\r\n\r\n                            {contacto === 'telefono' ? (\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"tel\" placeholder=\"Teléfono\" value={telefono} onChange={(e) => setTelefono(e.target.value)} />\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"email\" placeholder=\"Correo\" value={correo} onChange={(e) => setCorreo(e.target.value)} />\r\n                                </div>\r\n                            )} */}\r\n              <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                Recuperar Contraseña\r\n              </button>\r\n              {/* <button onClick={handleButtonClick}>Mostrar Notificación</button> */}\r\n            </form>\r\n            {mensaje && (\r\n              <div>\r\n                <p>{mensaje}</p>\r\n                {mostrarIngresarCodigo && (\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control rounded-0\"\r\n                      placeholder=\"Ingrese el código\"\r\n                      value={codigo}\r\n                      onChange={(e) => setCodigo(e.target.value)}\r\n                    />\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-append\">\r\n                        <button\r\n                          onClick={handleIngresarCodigo}\r\n                          className=\"btn btn-primary btn-block btn-flat\"\r\n                        >\r\n                          Validar Código\r\n                        </button>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <p className=\"mt-3 mb-1\">\r\n              <a href=\"/login/\">Login</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecuperarClave;\r\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RecuperarClaveNo = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    const usuario = localStorage.getItem('usuario');\r\n    if (!usuario) {\r\n      navigate('/recuperar-clave'); // Redirecciona a la página deseada (por ejemplo, '/turnos')\r\n    }\r\n  }, [navigate]);\r\n  \r\n  return null; // No renderiza nada, solo redirige en función de la sesión\r\n};\r\n\r\nexport default RecuperarClaveNo;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport RecuperarClaveNo from \"./recuperarClaveNo\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst NuevaClave = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [nuevaClave, setNuevaClave] = useState(\"\");\r\n  const [repetirNuevaClave, setRepetirNuevaClave] = useState(\"\");\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n\r\n  const usuario = localStorage.getItem(\"usuario\");\r\n  // const [usuario, setUsuario]= useState('');\r\n  const [campoRequerido, setCampoRequerido] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // setUsuario('qwerty');\r\n    if (!usuario.trim() || !nuevaClave.trim() || !repetirNuevaClave.trim()) {\r\n      // setShowModal(true); // Mostrar el modal si al menos uno de los campos está vacío\r\n      setCampoRequerido(true);\r\n      return;\r\n    }\r\n\r\n    if (nuevaClave !== repetirNuevaClave) {\r\n      // setMensaje('Las contraseñas no coinciden. Por favor, verifique.');\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Las contraseñas no coinciden. Por favor, verifique.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // const response = await axios.post('api/cambiar-clave/', {\r\n      // const response = await axios.post('http://127.0.0.1:8000/api/cambiar-clave/', {  \r\n      const response = await axios.post(\"http://18.234.135.140:8001/api/cambiar-clave/\",{\r\n          usuario: usuario,\r\n          clave: nuevaClave,\r\n          repetir_clave: repetirNuevaClave,\r\n        }\r\n      );\r\n\r\n      if (response.data.error) {\r\n        // setMensaje(response.data.error);\r\n        Swal.fire({\r\n          icon: \"warning\",\r\n          title: response.data.error,\r\n        });\r\n      } else {\r\n        setMensaje(response.data.mensaje);\r\n        // Swal.fire({\r\n        //     icon: 'warning',\r\n        //     title: response.data.mensaje,\r\n        // });\r\n        localStorage.removeItem(\"usuario\");\r\n        setTimeout(() => {\r\n          navigate(\"/login\");\r\n        }, 1000);\r\n      }\r\n    } catch (error) {\r\n      // setMensaje('Error al procesar la solicitud');\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Error al procesar la solicitud\",\r\n      });\r\n      console.error(\"Error al procesar la solicitud:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-box\">\r\n      <RecuperarClaveNo />\r\n      <div className=\"card card-outline card-primary\">\r\n        <div className=\"card-header text-center\">\r\n          <a href=\"/login/\" className=\"h1\">\r\n            <b>Comedor</b>App\r\n          </a>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"login-box-msg\">Cambiar contraseña</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${\r\n                  campoRequerido && !usuario ? \"is-invalid\" : \"\"\r\n                }`}\r\n                placeholder=\"Usuario\"\r\n                value={usuario}\r\n                disabled\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <div className=\"input-group-text\">\r\n                  <span className=\"fas fa-user\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className={`form-control ${\r\n                  campoRequerido && !nuevaClave ? \"is-invalid\" : \"\"\r\n                }`}\r\n                placeholder=\"Nueva Contraseña\"\r\n                value={nuevaClave}\r\n                onChange={(e) => setNuevaClave(e.target.value)}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <div className=\"input-group-text\">\r\n                  <span className=\"fas fa-lock\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className={`form-control ${\r\n                  campoRequerido && !repetirNuevaClave ? \"is-invalid\" : \"\"\r\n                }`}\r\n                placeholder=\"Repetir Nueva Contraseña\"\r\n                value={repetirNuevaClave}\r\n                onChange={(e) => setRepetirNuevaClave(e.target.value)}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <div className=\"input-group-text\">\r\n                  <span className=\"fas fa-lock\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n              <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                Cambiar Contraseña\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <a href=\"/login/\" className=\"text-center\">\r\n            Login\r\n          </a>\r\n        </div>\r\n      </div>\r\n      {mensaje && <p>{mensaje}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevaClave;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Opciones from './opciones';\r\nimport Cabecera from './cabecera';\r\nimport Pie from './pie';\r\nimport SesionNo from './sesionNo';\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <div>\r\n      <Cabecera />\r\n      <Opciones />\r\n      <SesionNo />\r\n      <div className=\"content-wrapper\">\r\n      \r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Bienvenido!</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\"><Link to=\"/menu/\">Inicio</Link></li>\r\n                  <li className=\"breadcrumb-item active\">Menú</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"content\">\r\n\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">Menú</h3>\r\n\r\n              <div className=\"card-tools\">\r\n                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\r\n                  <i className=\"fas fa-minus\"></i>\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              Check the Header part you can find Legacy version of style.\r\n              <br />\r\n              Start creating your amazing application!\r\n            </div>\r\n            \r\n            <div className=\"card-footer\">\r\n              Footer\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Pie/>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client'; // Cambio aquí\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\n// import ReactDOM from 'react-dom';\n\nimport Turnos from './componentes/turnos';\nimport Login from './componentes/login';\nimport MiTurno from './componentes/miTurno';\nimport RegistrarUsuario from './componentes/registrarUsuario';\nimport RecuperarClave from './componentes/recuperarClave';\nimport NuevaClave from './componentes/nuevaClave';\nimport Menu from './componentes/menu';\n\n// import Contenido from './componentes/contenido';\n// import Opciones from './componentes/opciones';\n// import Cabecera from './componentes/cabecera';\n\nimport reportWebVitals from './reportWebVitals';\nimport Opciones from './componentes/opciones';\n\nfunction App() {\n  return (\n    <Routes>\n      {/* <Route path=\"/turnos/:token\" element={<Turnos />} /> */}\n      <Route path=\"/turnos/\" element={<Turnos />} /> {/* Ruta para el componente Turnos */}\n      <Route path=\"/login/\" element={<Login />} />\n      <Route path=\"/mi-turno/\" element={<MiTurno />} />\n      <Route path=\"/registrar-usuario/\" element={<RegistrarUsuario />} />\n      <Route path=\"/recuperar-clave/\" element={<RecuperarClave />} />\n      <Route path=\"/nueva-clave/\" element={<NuevaClave />} />\n      <Route path=\"/menu/\" element={<Menu />} />\n      <Route path=\"/opciones/\" element={<Opciones />} />\n    </Routes>\n  );\n}\n\nconst root = document.getElementById('root');\nconst rootElement = createRoot(root);\n\nrootElement.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// const contenido = document.getElementById('contenido');\n// createRoot(contenido).render( // Cambio aquí\n//   <React.StrictMode>\n//     <Router>\n//       <Contenido />\n//     </Router>\n//   </React.StrictMode>\n// );\n\n// const opciones = document.getElementById('opciones');\n// createRoot(opciones).render(\n//   <React.StrictMode>\n//     <Router>\n//       <Opciones />\n//     </Router>\n//   </React.StrictMode>\n// );\n\n// const cabecera = document.getElementById('cabecera');\n// createRoot(cabecera).render(\n//   <React.StrictMode>\n//     <Router>\n//       <Cabecera />\n//     </Router>\n//   </React.StrictMode>\n// );\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}